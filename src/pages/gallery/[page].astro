---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';

import { getAllGalleryItems } from '../../utils/fetchData';

export async function getStaticPaths({ paginate }) {
	const galleryItems = await getAllGalleryItems();
	const paths = paginate(galleryItems, { pageSize: 6 });
	return paths;
}

const { page } = Astro.props;

const generatePages = (current, total) => {
	const surroundingPages = 1;
	let start = Math.max(1, current - surroundingPages);
	let end = Math.min(total, current + surroundingPages);

	if (current - start <= surroundingPages) {
		end = Math.min(total, end + (surroundingPages - (current - start)));
	}
	if (end - current <= surroundingPages) {
		start = Math.max(1, start - (surroundingPages - (end - current)));
	}

	let pages: number[] = [];
	for (let i = start; i <= end; i++) {
		pages.push(i);
	}

	return pages;
};

const displayedPages = generatePages(page.currentPage, page.lastPage);
---

<!doctype html>
<html lang='en'>
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Header title={SITE_TITLE} />
		<main>
			<section class='gallery'>
				{
					page.data.map((item) => (
						<div class='gallery-item'>
							<a href={`/gallery/${item.ID}`}>
								<img src={item.Image} alt={item.Species} />
								<p>{item.Species}</p>
							</a>
						</div>
					))
				}
			</section>
			<section class='pagination'>
				<a href={page.url.prev || '#'} class={page.url.prev ? '' : 'disabled'}>Previous</a>

				{displayedPages[0] > 1 ? <a href={`/gallery/1`}>1</a> : null}
				{displayedPages[0] > 2 ? <span>...</span> : null}

				{
					displayedPages.map((pageNumber, idx) => (
						<a href={`/gallery/${pageNumber}`} class={pageNumber === page.currentPage ? 'active' : ''}>
							{pageNumber}
						</a>
					))
				}

				{displayedPages[displayedPages.length - 1] < page.lastPage - 1 ? <span>...</span> : null}
				{
					displayedPages[displayedPages.length - 1] !== page.lastPage ? (
						<a href={`/gallery/${page.lastPage}`}>{page.lastPage}</a>
					) : null
				}

				<a href={page.url.next || '#'} class={page.url.next ? '' : 'disabled'}>Next</a>
			</section>
		</main>
		<Footer />
		<style>
			.gallery {
				display: grid;
				grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
				gap: 20px;
			}

			.gallery-item {
				border: 1px solid #eee;
				padding: 10px;
				box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
				text-align: center;
			}

			.gallery-item img {
				max-width: 100%;
				height: 10em;
			}
			.pagination {
				display: flex;
				justify-content: center;
				align-items: center;
				margin-top: 20px;
			}

			.pagination a {
				text-decoration: none;
				margin: 0 10px;
				padding: 5px 10px;
				color: #007bff;
				transition: color 0.3s;
			}

			.pagination a.disabled {
				color: #888; /* Grayed out text */
				pointer-events: none; /* Makes it non-clickable */
				cursor: default; /* Standard cursor instead of pointer */
				text-decoration: none;
			}

			.pagination a:hover {
				color: #0056b3;
			}

			.pagination a.active {
				font-weight: bold;
				text-decoration: underline;
			}
		</style>
	</body>
</html>
